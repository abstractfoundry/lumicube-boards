/* Copyright (c) 2020 Abstract Foundry Limited */

#include "project.h"
#include <stdint.h>

typedef enum eapds9960FieldEnum {
	ENABLE_PON,
	ENABLE_AEN,
	ENABLE_PEN,
	ENABLE_WEN,
	ENABLE_AIEN,
	ENABLE_PIEN,
	ENABLE_GEN,
	ATIME,
	WTIME,
	AILTL,
	AILTH,
	AIHTL,
	AIHTH,
	PILT,
	PIHT,
	PERS,
	CONFIG1_WLONG,
	PPULSE_PPLEN,
	PPULSE_PPULSE,
	CONTROL_LDRIVE,
	CONTROL_PGAIN,
	CONTROL_AGAIN,
	CONFIG2_PSIEN,
	CONFIG2_CPSIEN,
	CONFIG2_LED_BOOST,
	ID,
	STATUS_CPSAT,
	STATUS_PGSAT,
	STATUS_PINT,
	STATUS_AINT,
	STATUS_GINT,
	STATUS_PVALID,
	STATUS_AVALID,
	CDATAL,
	CDATAH,
	RDATAL,
	RDATAH,
	GDATAL,
	GDATAH,
	BDATAL,
	BDATAH,
	PDATA,
	POFFSET_UR,
	POFFSET_DL,
	CONFIG3,
	GPENTH,
	GEXTH,
	GCONF1_GFIFOTH,
	GCONF1_GEXMSK,
	GCONF1_GEXPERS,
	GCONF2_GGAIN,
	GCONF2_GLDRIVE,
	GCONF2_GWTIME,
	GOFFSET_U,
	GOFFSET_D,
	GOFFSET_L,
	GOFFSET_R,
	GPULSE_GPLEN,
	GPULSE_GPULSE,
	GCONF3_GDIMS,
	GCONF4_GFIFO_CLR,
	GCONF4_GIEN,
	GCONF4_GMODE,
	GFLVL,
	GSTATUS_GFOV,
	GSTATUS_GVALID,
	IFORCE,
	PICLEAR,
	CICLEAR,
	AICLEAR,
	GFIFO_U,
	GFIFO_D,
	GFIFO_L,
	GFIFO_R,
} apds9960FieldEnum;

void i2cWriteField(I2C_HandleTypeDef * hi2c, apds9960FieldEnum field, uint8_t data);
uint8_t i2cReadField(I2C_HandleTypeDef * hi2c, apds9960FieldEnum field);

/* Functions to read/write special registers */
void i2cReadARGBRegisters(I2C_HandleTypeDef * hi2c, uint16_t * ambientLight, uint16_t * red, uint16_t * green, uint16_t * blue);
void i2cReadGestureFifo(I2C_HandleTypeDef * hi2c, uint8_t * up, uint8_t * down, uint8_t * left, uint8_t * right);
void setEnableBits(I2C_HandleTypeDef * hi2c, uint8_t colour, uint8_t proximity, uint8_t gesture);
